#!/bin/bash
# This script installs and runs lmbench
# All parameters are passed by environment variables
###SHELLPACK preamble lmbench-bench 3

###SHELLPACK parseargBegin
###SHELLPACK parseargInstall
###SHELLPACK parseargEnd

###SHELLPACK check_install_required lmbench-${VERSION}

###SHELLPACK monitor_hooks

cd $SHELLPACK_SOURCES/lmbench-${VERSION}-installed || die Failed to cd to lmbench directory
for LMBENCH_TEST in $LMBENCH_TESTS; do
	# Prepare test
	case $LMBENCH_TEST in
	lat_mmap)
		;;
	lat_ctx)
		echo
		;;
	*)
		die "Unrecognised test $LMBENCH_TEST for preparation"
		;;
	esac

	# Run test
	monitor_pre_hook $LOGDIR_RESULTS $LMBENCH_TEST
	LMBENCH_RESULTS=$LOGDIR_RESULTS/lmbench-$LMBENCH_TEST.log

	case $LMBENCH_TEST in
	lat_mmap)
		STRIDE=$(((LMBENCH_LATMMAP_MAX_FILESIZE-LMBENCH_LATMMAP_MIN_FILESIZE)/20))
		for FILESIZE in `seq $LMBENCH_LATMMAP_MIN_FILESIZE $STRIDE $LMBENCH_LATMMAP_MAX_FILESIZE` $LMBENCH_LATMMAP_MAX_FILESIZEZE; do
			FILESIZE=$((FILESIZE&~4095))
			dd if=/dev/zero of=$TESTDISK_DIR/lmbench.file ibs=4096 count=$((FILESIZE/4096)) conv=sync 2> /dev/null
			./bin/$LMBENCH_TEST \
				-N $LMBENCH_LATMMAP_ITERATIONS \
				$FILESIZE $TESTDISK_DIR/lmbench.file \
					2>&1 | tee -a $LMBENCH_RESULTS
		done
		rm $TESTDISK_DIR/lmbench.file
		;;
	lat_ctx)
		###SHELLPACK threads_large_stride_begin 1 $LMBENCH_LATCTX_MAXCLIENTS
			./bin/$LMBENCH_TEST \
				-s $LMBENCH_LATCTX_SIZE \
				$NR_THREADS 2>&1 | tee -a $LMBENCH_RESULTS
		###SHELLPACK threads_stride_end
		;;
	*)
		die "Unrecognised test $LMBENCH_TEST for execution"
		;;
	esac
	monitor_post_hook $LOGDIR_RESULTS $LMBENCH_TEST 

	rm -f $TESTDISK_DIR/lmbench.file 2> /dev/null
done

exit $SHELLPACK_SUCCESS
