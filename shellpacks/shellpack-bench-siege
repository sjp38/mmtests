#!/bin/bash
P=siege-bench
DEFAULT_VERSION=3.0.5
. $SHELLPACK_INCLUDE/common.sh

ITER_REPS=150

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--max-users)
		MAX_USERS=$2
		shift 2
		;;
	--iterations)
		ITERATIONS=$2
		shift 2
		;;
	--reps-per-iter)
		ITER_REPS=$2
		shift 2
		;;
	--time-per-iter)
		ITER_TIME=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi
        
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh
if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/siege-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/siege-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-siege -v ${VERSION}  || die siege install script returned error
fi
cd $SHELLPACK_SOURCES/siege-${VERSION}-installed || die Failed to cd to siege install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo siege installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

echo Shutting down apache server...
$SHELLPACK_INCLUDE/shellpack-bench-apachebuild --stop || die Failed to shutdown apache http server for restart.
echo Starting apache server...
$SHELLPACK_INCLUDE/shellpack-bench-apachebuild --start || die Failed to start apache http server.
sleep 5

ITER_ARG=
if [ "$ITER_TIME" != "" ]; then
	ITER_ARG="-t $ITER_TIME"
else
	ITER_ARG="-r $ITER_REPS"
fi

echo Enabling tcp_tw_recycle
sysctl -w net.ipv4.tcp_tw_recycle=1
echo Setting files limit $((MAX_USERS*1000))
ulimit -n $((MAX_USERS*1000))

TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
	TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
	TIME_CMD="time"
fi

echo Running up to $MAX_USERS users, $ITERATIONS iterations per user
NR_THREADS=1
while [ $NR_THREADS -lt $MAX_USERS ]; do
	if [ $NR_THREADS -gt $MAX_USERS ]; then
		NR_THREADS=$MAX_USERS
	fi
	monitor_pre_hook $LOGDIR_RESULTS $NR_THREADS
	for ITER in `seq 1 $ITERATIONS`; do
		echo Running $ITER/$ITERATIONS: siege -b $ITER_ARG -c $NR_THREADS
		$TIME_CMD -o $LOGDIR_RESULTS/siege-${NR_THREADS}-${ITER}.time \
			./bin/siege -q -b $ITER_ARG \
				-c $NR_THREADS \
					http://localhost/siege \
					2>&1 | tee $LOGDIR_RESULTS/siege-${NR_THREADS}-${ITER}.log \
					|| die Failed to run siege
	done
	monitor_post_hook $LOGDIR_RESULTS $NR_THREADS
NR_THREADS=$((NR_THREADS*2))
done

echo siege completed successfully
exit $SHELLPACK_SUCCESS
#### Description siege
#### Details siege-bench 25
