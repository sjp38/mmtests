#!/bin/bash
# This script installs and runs lmbench
# All parameters are passed by environment variables
P=lmbench-bench
DEFAULT_VERSION=3
. $SHELLPACK_INCLUDE/common.sh

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/lmbench-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/lmbench-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-lmbench -v ${VERSION}  || die lmbench install script returned error
fi
cd $SHELLPACK_SOURCES/lmbench-${VERSION}-installed || die Failed to cd to lmbench install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo lmbench installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

cd $SHELLPACK_SOURCES/lmbench-${VERSION}-installed || die Failed to cd to lmbench directory
for LMBENCH_TEST in $LMBENCH_TESTS; do
	# Prepare test
	case $LMBENCH_TEST in
	lat_mmap)
		;;
	lat_ctx)
		echo
		;;
	*)
		die "Unrecognised test $LMBENCH_TEST for preparation"
		;;
	esac

	# Run test
	monitor_pre_hook $LOGDIR_RESULTS $LMBENCH_TEST
	LMBENCH_RESULTS=$LOGDIR_RESULTS/lmbench-$LMBENCH_TEST.log

	case $LMBENCH_TEST in
	lat_mmap)
		STRIDE=$(((LMBENCH_LATMMAP_MAX_FILESIZE-LMBENCH_LATMMAP_MIN_FILESIZE)/20))
		for FILESIZE in `seq $LMBENCH_LATMMAP_MIN_FILESIZE $STRIDE $LMBENCH_LATMMAP_MAX_FILESIZE` $LMBENCH_LATMMAP_MAX_FILESIZEZE; do
			FILESIZE=$((FILESIZE&~4095))
			dd if=/dev/zero of=$TESTDISK_DIR/lmbench.file ibs=4096 count=$((FILESIZE/4096)) conv=sync 2> /dev/null
			./bin/$LMBENCH_TEST \
				-N $LMBENCH_LATMMAP_ITERATIONS \
				$FILESIZE $TESTDISK_DIR/lmbench.file \
					2>&1 | tee -a $LMBENCH_RESULTS
		done
		rm $TESTDISK_DIR/lmbench.file
		;;
	lat_ctx)
THREADS=
START_THREAD=1
END_THREAD=$LMBENCH_LATCTX_MAXCLIENTS
if [ $END_THREAD -gt 32 ]; then
        THREADS=`seq $START_THREAD 2 8`
        THREADS="$THREADS `seq 12 6 32`"
        THREADS="$THREADS `seq 48 18 $END_THREAD`"
elif [ $END_THREAD -gt 8 ]; then
        THREADS=`seq $START_THREAD 2 8`
        THREADS="$THREADS `seq 12 6 $END_THREAD`"
else
        THREADS=`seq $START_THREAD 2 $END_THREAD`
fi
for NR_THREADS in $THREADS; do
			./bin/$LMBENCH_TEST \
				-s $LMBENCH_LATCTX_SIZE \
				$NR_THREADS 2>&1 | tee -a $LMBENCH_RESULTS
done
		;;
	*)
		die "Unrecognised test $LMBENCH_TEST for execution"
		;;
	esac
	monitor_post_hook $LOGDIR_RESULTS $LMBENCH_TEST 

	rm -f $TESTDISK_DIR/lmbench.file 2> /dev/null
done

exit $SHELLPACK_SUCCESS
#### Description lmbench
#### Details lmbench-bench 25
