#!/bin/bash
# This script whatevers mutilate
P=mutilate-bench
DEFAULT_VERSION=1
. $SHELLPACK_INCLUDE/common.sh

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--max-threads)
		MUTILATE_MAX_THREADS=$2
		shift 2
		;;
	--iterations)
		MUTILATE_ITERATIONS=$2
		shift 2
		;;
	--duration)
		MUTILATE_DURATION=$2
		shift 2
		;;
	--memcached-mempool)
		MEMCACHED_MEMPOOL=$2
		shift 2
		;;
	--value-size)
		MEMCACHED_VALUE_SIZE=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/mutilate-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/mutilate-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-mutilate -v ${VERSION}  || die mutilate install script returned error
fi
cd $SHELLPACK_SOURCES/mutilate-${VERSION}-installed || die Failed to cd to mutilate install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo mutilate installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

if [ "$MEMCACHED_MEMPOOL" = "" ]; then
	die Must specify memcached memory pool size
fi

# Start memcached server
$SHELLPACK_INCLUDE/shellpack-install-memcached --mempool $MEMCACHED_MEMPOOL
if [ $? -ne 0 ]; then
	die Failed to start memcached server
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

cd $SHELLPACK_SOURCES/mutilate-${VERSION}-installed || die Failed to cd to mutilate directory
MUTILATE_ITEMS=$(($MEMCACHED_MEMPOOL/$MUTILATE_VALUE_SIZE))

THREADS=
START_THREAD=1
END_THREAD=$MUTILATE_MAX_THREADS
if [ $END_THREAD -gt 32 ]; then
        THREADS=`seq $START_THREAD 8`
        THREADS="$THREADS `seq 12 4 32`"
        THREADS="$THREADS `seq 48 16 $END_THREAD`"
elif [ $END_THREAD -gt 8 ]; then
        THREADS=`seq $START_THREAD 8`
        THREADS="$THREADS `seq 12 4 $END_THREAD`"
else
        THREADS=`seq $START_THREAD $END_THREAD`
fi
for NR_THREADS in $THREADS; do
monitor_pre_hook $LOGDIR_RESULTS $NR_THREADS

for ITERATION in `seq 1 $MUTILATE_ITERATIONS`; do
	echo Starting mutilate client $MUTILATE_CONCURRENCY
	echo o $MEMCACHED_MEMPOOL memcached pool
	echo o $NR_THREADS concurrent requests
	echo o $MUTILATE_VALUE_SIZE value size
	echo o $MUTILATE_DURATION second duration
	echo o $MUTILATE_ITEMS items per iteration

	echo Iteration:$ITERATION
	./bin/mutilate \
		-s 127.0.0.1 \
		-T $NR_THREADS \
		-V $MUTILATE_VALUE_SIZE \
		-r $MUTILATE_ITEMS \
		-t $MUTILATE_DURATION \
		    | tee -a $LOGDIR_RESULTS/mutilate-$NR_THREADS-$ITERATION.log
done

monitor_post_hook $LOGDIR_RESULTS $NR_THREADS
done

$SHELLPACK_INCLUDE/shellpack-install-memcached --shutdown

exit $SHELLPACK_SUCCESS
#### Description mutilate
#### Details mutilate-bench 17
