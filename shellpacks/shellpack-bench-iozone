#!/bin/bash
# This script installs iozone and whatever
P=iozone-bench
DEFAULT_VERSION=3_428
. $SHELLPACK_INCLUDE/common.sh

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/iozone-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/iozone-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-iozone -v ${VERSION}  || die iozone install script returned error
fi
cd $SHELLPACK_SOURCES/iozone-${VERSION}-installed || die Failed to cd to iozone install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo iozone installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

if [ -z "$IOZONE_MAX_SIZE" ]; then
	IOZONE_MAX_SIZE=$((MEMTOTAL_BYTES*2))
fi

if [ -z "$IOZONE_MIN_SIZE" ]; then
	IOZONE_MIN_SIZE=$((IOZONE_MAX_SIZE/16))
fi

if [ -z "$IOZONE_MIN_BLK_SIZE" ]; then
	if [ -z "$IOZONE_MAX_BLK_SIZE" ]; then
		IOZONE_MAX_BLK_SIZE=4096
	fi
	IOZONE_MIN_BLK_SIZE="$IOZONE_MAX_BLK_SIZE"
elif [ -z "$IOZONE_MAX_BLK_SIZE" ]; then
	IOZONE_MAX_BLK_SIZE="$IOZONE_MIN_BLK_SIZE"
fi

monitor_pre_hook $LOGDIR_RESULTS
for (( ITERATION = 1; ITERATION <= IOZONE_ITERATIONS; ITERATION++ )); do
	src/current/iozone -a -n $((IOZONE_MIN_SIZE/1024)) \
		-g $((IOZONE_MAX_SIZE/1024)) -y $IOZONE_MIN_BLK_SIZE \
		-q $IOZONE_MAX_BLK_SIZE -i 0 -i 1 -i 2 -i 3 \
		-f $TESTDISK_DIR/iozone_file 2>&1 | \
		tee $LOGDIR_RESULTS/iozone-$ITERATION.log ||
		die "Failed to run iozone"
done
monitor_post_hook $LOGDIR_RESULTS

exit $SHELLPACK_SUCCESS
#### Description iozone
#### Details iozone-bench 8
