#!/bin/bash
# This script installs netperf and runs the regression tests
P=netperf-bench
DEFAULT_VERSION=2.4.5
. $SHELLPACK_INCLUDE/common.sh
PROTOCOLS="UDP_STREAM TCP_STREAM"
BUFFER_SIZES="64 128 256 1024 2048 3312 4096 6144 8192 10240 12288 14336 16384"

TASKSET_SERVER=
TASKSET_CLIENT=

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--bind-pinned)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUA"
		shift
		;;
	--bind-cross-node)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		CPUB=`numactl --hardware | grep ^node | grep cpus: | tail -1 | awk '{print $NF}'`
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUB"
		shift
		;;
	--bind-cross-socket)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		CPUB=`list-cpu-siblings.pl $CPUA cores | awk -F , '{print $1}'`
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUB"
		shift
		;;
	--bind-cross-ht)
		CPUA=`numactl --hardware | grep ^node | grep cpus: | head -1 | awk '{print $4}'`
		CPUB=`list-cpu-siblings.pl $CPUA threads | awk -F , '{print $1}'`
		if [ "$CPUB" = "" ]; then
			echo ERROR: Could not identify HT thread for CPU $CPUA
			exit $SHELLPACK_ERROR
		fi
		TASKSET_SERVER="taskset -c $CPUA"
		TASKSET_CLIENT="taskset -c $CPUB"
		shift
		;;
	--protocols)
		PROTOCOLS=`echo $2 | sed -e 's/,/ /g'`
		shift 2
		;;
	--buffer-sizes)
		BUFFER_SIZES=`echo $2 | sed -e 's/,/ /g'`
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/netperf-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/netperf-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-netperf -v ${VERSION}  || die netperf install script returned error
fi
cd $SHELLPACK_SOURCES/netperf-${VERSION}-installed || die Failed to cd to netperf install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo netperf installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

cd $SHELLPACK_SOURCES/netperf-${VERSION}-installed || die Failed to cd to netperf directory

echo Killing old servers
killall netserver

echo Starting server
NETROOT=$SHELLPACK_SOURCES/netperf-${VERSION}-installed 
$TASKSET_SERVER $NETROOT/bin/netserver || die Failed to start netserver
sleep 2

echo $PROTOCOLS > $LOGDIR_RESULTS/protocols
for PROTOCOL in $PROTOCOLS; do
	EXTRA=
	if [ "$PROTOCOL" = "UDP_STREAM" ]; then
		EXTRA="-P 15895 -s 32768 -S 32768"
	fi

	for SIZE in $BUFFER_SIZES; do
		SIZE_OPT=
		if [ "$PROTOCOL" = "UDP_STREAM" -o "$PROTOCOL" = "TCP_STREAM" ]; then
			SIZE_OPT="-m $SIZE -M $SIZE"
		fi
		if [ "$PROTOCOL" = "UDP_RR" -o "$PROTOCOL" = "TCP_RR" ]; then
			SIZE_OPT="-r $SIZE"
		fi
	
		echo Running test $PROTOCOL 
		monitor_pre_hook $LOGDIR_RESULTS $SIZE
		eval $TASKSET_CLIENT $NETROOT/bin/netperf \
			-t $PROTOCOL \
			-i 30,6 -I 99,1 \
			-H 127.0.0.1 \
			-- \
			$SIZE_OPT \
			$EXTRA \
				2>&1 | tee $LOGDIR_RESULTS/$PROTOCOL-${SIZE}.log \
				|| die Failed to run netperf
		monitor_post_hook $LOGDIR_RESULTS $SIZE
	done
done
killall netserver

exit $SHELLPACK_SUCCESS
#### Description Netperf benchmark
#### Details netperf-bench 25
